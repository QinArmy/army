<?xml version="1.0" encoding="UTF-8" ?>
<meta_dqls dialec="Postgre">
    <postgre_schema_dql>
        SELECT current_database() AS catalog, current_schema() AS schema
    </postgre_schema_dql>
    <postgre_table_dql>
        SELECT
            t.table_name,
            d.description
            FROM
                information_schema.tables          AS t
                    JOIN pg_catalog.pg_class       AS c ON t.table_name = c.relname AND c.relkind IN ('r', 'p')
                    JOIN pg_catalog.pg_namespace   AS n ON c.relnamespace = n.oid
                    JOIN pg_catalog.pg_description AS d ON c.oid = d.objoid AND d.objsubid = 0
            WHERE
                  current_database() = $1
              AND n.nspname = $2
              AND t.table_type = 'BASE TABLE';
    </postgre_table_dql>
    <postgre_column_dql>
        SELECT
            col.column_name      AS columnName,
            upper(col.data_type) AS dataType,
            CASE
                WHEN upper(col.data_type) IN ('TIME WITH TIME ZONE', 'TIMESTAMP WITH TIME ZONE') AND
                     col.datetime_precision IS NOT NULL
                    THEN col.datetime_precision
                WHEN upper(col.data_type) IN ('DECIMAL', 'NUMERIC') AND col.numeric_precision IS NOT NULL
                    THEN col.numeric_precision
                WHEN upper(col.data_type) IN ('CHAR', 'VARCHAR', 'CHARACTER VARYING', 'CHARACTER', 'BIT') AND
                     col.character_maximum_length IS NOT NULL
                    THEN col.character_maximum_length
                    ELSE -1
            END                  AS precision,
            CASE
                WHEN upper(col.data_type) IN ('DECIMAL', 'NUMERIC') AND col.numeric_scale IS NOT NULL
                    THEN col.numeric_scale
                    ELSE -1
            END                  AS scale,
            CASE col.is_nullable
                WHEN 'YES'
                    THEN 'true'
                WHEN 'NO'
                    THEN 'false'
            END                  AS nullable,
            col.column_default   AS defaultValue,
            d.description        AS comment
            FROM
                pg_catalog.pg_namespace                  AS n
                    JOIN      pg_catalog.pg_class        AS t ON n.oid = t.relnamespace AND t.relkind IN ('r', 'p')
                    JOIN      pg_catalog.pg_attribute    AS c ON t.oid = c.attrelid AND c.attnum > 0
                    JOIN      information_schema.columns AS col
                              ON col.table_schema = n.nspname AND col.table_name = t.relname AND
                                 c.attname = col.column_name
                    LEFT JOIN pg_catalog.pg_description  AS d ON t.oid = d.objoid AND d.objsubid = c.attnum
            WHERE
                  current_database() = $1
              AND n.nspname = $2
              AND col.table_name = $3
    </postgre_column_dql>
    <postgre_index_dql>
        SELECT
            tmp.indexName AS indexName,
            tmp.indexType AS indexType,
            tmp."unique"  AS "unique",
            tmp.colmnName AS colmnName,
            CASE tmp.indexType
                WHEN 'btree' THEN CASE indoption[ordinalPosition - 1] &amp; 1
                                      WHEN 1 THEN FALSE
                                             ELSE TRUE
                                  END
            END           AS "asc"
            FROM
                (
                    SELECT
                        ci.relname                                       AS indexName,
                        i.indisunique                                    AS "unique",
                        am.amname                                        AS indexType,
                        trim(BOTH '"' FROM
                             pg_catalog.pg_get_indexdef(ci.oid, (information_schema._pg_expandarray(i.indkey)).n,
                                                        FALSE))          AS colmnName,
                        (information_schema._pg_expandarray(i.indkey)).n AS ordinalPosition,
                        i.indoption                                      AS indoption
                        FROM
                            pg_catalog.pg_namespace      n
                                JOIN pg_catalog.pg_class c ON c.relnamespace = n.oid
                                JOIN pg_catalog.pg_index i ON c.oid = i.indrelid
                                JOIN pg_catalog.pg_class ci ON ci.oid = i.indexrelid
                                JOIN pg_catalog.pg_am    am ON ci.relam = am.oid
                        WHERE
                              current_database() = $1
                          AND n.nspname = $2
                          AND c.relname = $3
                ) AS tmp
    </postgre_index_dql>
</meta_dqls>
